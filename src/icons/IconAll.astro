---
import IconAstro from "./IconAstro.astro";
import IconNextjs from "./IconNextjs.astro";
import IconTailwind from "./IconTailwind.astro";
import IconReactQuery from "./IconReactQuery.astro";
import IconTypeScript from "./IconTypeScript.astro";
import IconZustand from "./IconZustand.astro";
import IconHtml from "./IconHtml.astro";
import IconCss from "./IconCss.astro";
import IconReact from "./IconReact.astro";
import IconGit from "./IconGit.astro";
import IconGitHub from "./IconGtiHub.astro";
import IconStripe from "./IconStripe.astro";
import IconJavaScript from "./IconJavaScritp.astro";
import IconMongodb from "./IconMongodb.astro";
import IconNodeJs from "./IconNodeJs.astro";
import IconVite from "./IconVite.astro";
import IconFigma from "./IconFigma.astro";

// 1. Define un tipo para todas las claves posibles
export type IconKey = keyof typeof ICONS;

// 2. Objeto de iconos con inferencia de tipos
export const ICONS = {
  html: IconHtml,
  css: IconCss,
  javascript: IconJavaScript, // Nota: clave en minúsculas para consistencia
  react: IconReact,
  astro: IconAstro,
  nextjs: IconNextjs,
  tailwind: IconTailwind,
  reactQuery: IconReactQuery,
  typescript: IconTypeScript, // Minúsculas para consistencia
  zustand: IconZustand,
  git: IconGit,
  github: IconGitHub,
  stripe: IconStripe,
  mongodb: IconMongodb,
  nodejs: IconNodeJs,
  vite: IconVite,
  figma: IconFigma,
};

// 3. Función con validación de tipos estricta
export function getIconComponent(iconName: IconKey): typeof ICONS[IconKey] {
  return ICONS[iconName];
}

// 4. Opcional: Tipo para props de componente que usen iconos
export type WithIconProps = {
  icon: IconKey;
  [key: string]: any;
};